// Funcion Objetivo
min: + A0 + A1 + A2 + A3 + A4 + A5 + A6;

// Puntos
// [10, 20, 25, 40, 50, 55, 60]

// Calculo de las Distancias entre la escuela y las veredas
// Distancia de la escuela a 0
e - 10 + 2000 - 2000 N0 >= D0;
e - 10 - 2000 + 2000 N0 <= D0;
- e + 10 + 2000 N0 >= D0;
- e + 10 - 2000 N0 <= D0;
// Distancia de la escuela a 1
e - 20 + 2000 - 2000 N1 >= D1;
e - 20 - 2000 + 2000 N1 <= D1;
- e + 20 + 2000 N1 >= D1;
- e + 20 - 2000 N1 <= D1;
// Distancia de la escuela a 2
e - 25 + 2000 - 2000 N2 >= D2;
e - 25 - 2000 + 2000 N2 <= D2;
- e + 25 + 2000 N2 >= D2;
- e + 25 - 2000 N2 <= D2;
// Distancia de la escuela a 3
e - 40 + 2000 - 2000 N3 >= D3;
e - 40 - 2000 + 2000 N3 <= D3;
- e + 40 + 2000 N3 >= D3;
- e + 40 - 2000 N3 <= D3;
// Distancia de la escuela a 4
e - 50 + 2000 - 2000 N4 >= D4;
e - 50 - 2000 + 2000 N4 <= D4;
- e + 50 + 2000 N4 >= D4;
- e + 50 - 2000 N4 <= D4;
// Distancia de la escuela a 5
e - 55 + 2000 - 2000 N5 >= D5;
e - 55 - 2000 + 2000 N5 <= D5;
- e + 55 + 2000 N5 >= D5;
- e + 55 - 2000 N5 <= D5;
// Distancia de la escuela a 6
e - 60 + 2000 - 2000 N6 >= D6;
e - 60 - 2000 + 2000 N6 <= D6;
- e + 60 + 2000 N6 >= D6;
- e + 60 - 2000 N6 <= D6;

// Calculo de los condicionales de la vereda más lejana
D0 - D1 - 2000 r0 >= -2000;
D0 - D2 - 2000 r0 >= -2000;
D0 - D3 - 2000 r0 >= -2000;
D0 - D4 - 2000 r0 >= -2000;
D0 - D5 - 2000 r0 >= -2000;
D0 - D6 - 2000 r0 >= -2000;
D1 - D0 - 2000 r1 >= -2000;
D1 - D2 - 2000 r1 >= -2000;
D1 - D3 - 2000 r1 >= -2000;
D1 - D4 - 2000 r1 >= -2000;
D1 - D5 - 2000 r1 >= -2000;
D1 - D6 - 2000 r1 >= -2000;
D2 - D0 - 2000 r2 >= -2000;
D2 - D1 - 2000 r2 >= -2000;
D2 - D3 - 2000 r2 >= -2000;
D2 - D4 - 2000 r2 >= -2000;
D2 - D5 - 2000 r2 >= -2000;
D2 - D6 - 2000 r2 >= -2000;
D3 - D0 - 2000 r3 >= -2000;
D3 - D1 - 2000 r3 >= -2000;
D3 - D2 - 2000 r3 >= -2000;
D3 - D4 - 2000 r3 >= -2000;
D3 - D5 - 2000 r3 >= -2000;
D3 - D6 - 2000 r3 >= -2000;
D4 - D0 - 2000 r4 >= -2000;
D4 - D1 - 2000 r4 >= -2000;
D4 - D2 - 2000 r4 >= -2000;
D4 - D3 - 2000 r4 >= -2000;
D4 - D5 - 2000 r4 >= -2000;
D4 - D6 - 2000 r4 >= -2000;
D5 - D0 - 2000 r5 >= -2000;
D5 - D1 - 2000 r5 >= -2000;
D5 - D2 - 2000 r5 >= -2000;
D5 - D3 - 2000 r5 >= -2000;
D5 - D4 - 2000 r5 >= -2000;
D5 - D6 - 2000 r5 >= -2000;
D6 - D0 - 2000 r6 >= -2000;
D6 - D1 - 2000 r6 >= -2000;
D6 - D2 - 2000 r6 >= -2000;
D6 - D3 - 2000 r6 >= -2000;
D6 - D4 - 2000 r6 >= -2000;
D6 - D5 - 2000 r6 >= -2000;
r0 + r1 + r2 + r3 + r4 + r5 + r6 = 1;
// Calculo de las distancias condicionadas
A0 - D0 - 2000 r0 >= -2000;
A0 - D0 + 2000 r0 <= 2000;
A0 - 2000 r0 <= 0;
A1 - D1 - 2000 r1 >= -2000;
A1 - D1 + 2000 r1 <= 2000;
A1 - 2000 r1 <= 0;
A2 - D2 - 2000 r2 >= -2000;
A2 - D2 + 2000 r2 <= 2000;
A2 - 2000 r2 <= 0;
A3 - D3 - 2000 r3 >= -2000;
A3 - D3 + 2000 r3 <= 2000;
A3 - 2000 r3 <= 0;
A4 - D4 - 2000 r4 >= -2000;
A4 - D4 + 2000 r4 <= 2000;
A4 - 2000 r4 <= 0;
A5 - D5 - 2000 r5 >= -2000;
A5 - D5 + 2000 r5 <= 2000;
A5 - 2000 r5 <= 0;
A6 - D6 - 2000 r6 >= -2000;
A6 - D6 + 2000 r6 <= 2000;
A6 - 2000 r6 <= 0;

// Restricciones Binarias
N0 <= 1;
N1 <= 1;
N2 <= 1;
N3 <= 1;
N4 <= 1;
N5 <= 1;
N6 <= 1;
r0 <= 1;
r1 <= 1;
r2 <= 1;
r3 <= 1;
r4 <= 1;
r5 <= 1;
r6 <= 1;

// Restricciones Binarias (2)
int N0, N1, N2, N3, N4, N5, N6, r0, r1, r2, r3, r4, r5, r6;

